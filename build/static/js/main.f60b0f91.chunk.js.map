{"version":3,"sources":["components/number/index.js","components/operator/index.js","calculator.js","App.js","serviceWorker.js","index.js"],"names":["Number","_this$props","this","props","number","handleNumber","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","onClick","React","Component","Operator","operator","handleOperator","operators","Calculator","_this","Object","_Users_roman_kluth_PhpstormProjects_react_calculator_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_roman_kluth_PhpstormProjects_react_calculator_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_roman_kluth_PhpstormProjects_react_calculator_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","input","value","setState","o","resetInput","indexOf","length","n","newInput","toString","newValue","eval","_this2","_this$state","_components_operator__WEBPACK_IMPORTED_MODULE_7__","_components_number__WEBPACK_IMPORTED_MODULE_8__","App","react_default","calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f60b0f91.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Number extends React.Component {\n    render() {\n        const {number, handleNumber} = this.props;\n        return (\n            <div className=\"key\" onClick={handleNumber}>\n                {number}\n            </div>\n        )\n    }\n}\n\nNumber.propTypes = {\n    number: PropTypes.number.isRequired,\n    handleNumber: PropTypes.func.isRequired,\n};\n\nexport default Number;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Operator extends React.Component {\n    render() {\n        const {operator, handleOperator} = this.props;\n        return (\n            <div className=\"key\" onClick={handleOperator}>\n                {operator}\n            </div>\n        )\n    }\n}\n\nOperator.propTypes = {\n    operator: PropTypes.number.isRequired,\n    handleOperator: PropTypes.func.isRequired,\n};\n\nexport default Operator;\n","import React from 'react';\nimport './app.css';\nimport Operator from './components/operator';\nimport Number from './components/number';\n\nconst operators = ['+', '-', '*', '/', 'CE'];\n\nclass Calculator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            input: 0,\n            value: 0,\n        };\n    }\n\n    resetInput(){\n        this.setState({\n            input: 0,\n            value: 0,\n        })\n    }\n\n    handleOperator(o) {\n        const {input} = this.state;\n\n        if (o === operators[4]) {\n            this.resetInput();\n        } else {\n            this.setState({\n                input: operators.indexOf(input[input.length - 1]) >= 0 ? input : input + o,\n            });\n        }\n    }\n\n    handleNumber(n) {\n        const newInput = this.state.input.toString() === \"0\"\n            ? n.toString()\n            : this.state.input + n;\n\n        const newValue = newInput !== \"0\"\n            ? eval(this.state.input + n)\n            : \"0\";\n\n        this.setState({\n            input: newInput,\n            value: newValue,\n        });\n    }\n\n    render() {\n        const {input, value} = this.state;\n        return (\n            <div className=\"App\">\n                <div className=\"input\">{input}</div>\n                <div className=\"response\">{value}</div>\n                <table>\n                    <tr>\n                        <td>\n                            <Operator operator={operators[0]} handleOperator={() => {\n                                this.handleOperator(operators[0])\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={1} handleNumber={() => {\n                                this.handleNumber(1)\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={2} handleNumber={() => {\n                                this.handleNumber(2)\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={3} handleNumber={() => {\n                                this.handleNumber(3)\n                            }}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <Operator operator={operators[1]} handleOperator={() => {\n                                this.handleOperator(operators[1])\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={4} handleNumber={() => {\n                                this.handleNumber(4)\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={5} handleNumber={() => {\n                                this.handleNumber(5)\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={6} handleNumber={() => {\n                                this.handleNumber(6)\n                            }}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <Operator operator={operators[2]} handleOperator={() => {\n                                this.handleOperator(operators[2])\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={7} handleNumber={() => {\n                                this.handleNumber(7)\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={8} handleNumber={() => {\n                                this.handleNumber(8)\n                            }}/>\n                        </td>\n                        <td>\n                            <Number number={9} handleNumber={() => {\n                                this.handleNumber(9)\n                            }}/>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>\n                            <Operator operator={operators[3]} handleOperator={() => {\n                                this.handleOperator(operators[3])\n                            }}/>\n                        </td>\n                        <td>\n                        </td>\n                        <td>\n                            <Number number={0} handleNumber={() => {\n                                this.handleNumber(0)\n                            }}/>\n                        </td>\n                        <td>\n                            <Operator operator={operators[4]} handleOperator={() => {\n                                this.handleOperator(operators[4])\n                            }}/>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default Calculator;\n","import React from 'react';\nimport './app.css';\nimport Calculator from \"./calculator\";\n\nfunction App() {\n    return (\n        <div className=\"app\">\n            <Calculator/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}